ku byBaseTest
{
    data biao bridge [primaryKey(iD)] (
    string iD "编号" [by.identity.ID, notNull]
    , string left "字典ID" [by.identity.Reference,ref:dic.iD]
    , string right "树ID" [by.identity.Reference,ref:tree.iD])
    {
        
    }

    config biao bridge.source "数据源配置表" (
    string name "名称"
    , string mode "模式"
    , string[] actions "动作"
    , string fieldAccess "字段访问"
    , string[] settings "设置")
    {
        { iD, user, { select, insert }, iD, { name: "iD", text: "唯一身份字段" ,visible:false,readonly:true} }
        { left, user, { insert, delete, update, select }, left, { name: "left", text: "左表_连接",readonly:true } }
        { right, user, { insert, delete, update, select }, right, { name: "right", text: "右表_连接" ,readonly:true} } 
        { dicSummery,relation , {select} , :relation left:.summary , { name: "dicSummery", text: "dicSummery" }  }
        { dicName,relation , {select} , :relation left:.name , { name: "dicSummery", text: "字典说明" }  }  
        { treeName,relation , {select} , :relation right:.name ,{ name: "treeName", text: "树名称", readonly: true }  }  
    }

    config biao bridge.flow "数据流配置表" (
    string name "名称"
    , string action "动作"
    , string[] sources "数据源(source.name)")
    {
        { insert, insert, { iD, left, right } }
        { update, update, { left, right } }
        { delete, delete, { iD } } 
        //{ select , select, { iD, left, right, dicName, dicSummery, treeName, treeSummery } } 
        { selectLeft, select, {  dicName, dicSummery  } } 
        { selectRight, select, {   treeName } }
        { popup, select, { iD, left, right, dicName, dicSummery, treeName  } }
    }

    config biao bridge.control "控件配置表" (
    string name "名称"
    , string[] types "控件类型"
    , string[] sources "数据源(source.name)")
    {
        { gridLef, { Grid }, { iD, left, right, dicName, dicSummery } }
        { gridRight, { Grid }, { iD, left, right,  treeName  } }
    }
}